apply plugin: 'scala'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = 1.6
targetCompatibility = 1.6

war {
    baseName = 'scala-slick-springboot-sample'
    version =  '1.0.0'
}

repositories {
    jcenter()
	mavenCentral()
}

dependencies {
    compile 'org.scala-lang:scala-library:2.11.4'
    //compile("org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final")
    //compile("org.hibernate:hibernate-validator:5.1.3.Final")
    compile("com.squareup.okhttp:okhttp:2.2.0")
    compile("com.squareup.retrofit:retrofit:1.8.0")

    compile("org.slf4j:slf4j-api:1.7.7");

    compile("commons-io:commons-io:2.4")

    compile 'com.fasterxml.jackson.module:jackson-module-scala_2.11:2.4.4'

    compile("com.fasterxml.jackson.core:jackson-core:2.4.3")
    compile("com.fasterxml.jackson.core:jackson-databind:2.4.3")
    compile("com.fasterxml.jackson.core:jackson-annotations:2.4.3")
    //define data type for jackson
    //another data type e.g for joda time is: compile("com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.2")
    //see: http://blog.codeleak.pl/2014/10/exposing-spring-data-repositories-over-rest.html
    compile("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.4.3")

    compile('org.apache.httpcomponents:httpcore:4.3.3')
    compile('org.apache.httpcomponents:httpclient:4.3.5')

    // We use Scalatest for testing our library
    testCompile 'junit:junit:4.12'
    testCompile 'org.scalatest:scalatest_2.11:2.2.3'
    testRuntime 'org.scala-lang.modules:scala-xml_2.11:1.0.3'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}